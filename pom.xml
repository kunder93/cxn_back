<?xml version="1.0" encoding="UTF-8"?>
<!-- #%L CXN-back-app %% Copyright (C) 2022 - 2025 Círculo Xadrez Narón %% 
	Permission is hereby granted, free of charge, to any person obtaining a copy 
	of this software and associated documentation files (the "Software"), to 
	deal in the Software without restriction, including without limitation the 
	rights to use, copy, modify, merge, publish, distribute, sublicense, and/or 
	sell copies of the Software, and to permit persons to whom the Software is 
	furnished to do so, subject to the following conditions: The above copyright 
	notice and this permission notice shall be included in all copies or substantial 
	portions of the Software. THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY 
	OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
	OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
	DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, 
	ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
	DEALINGS IN THE SOFTWARE. #L% -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.1</version>
		<relativePath />
	</parent>

	<groupId>es.org.cxn</groupId>
	<artifactId>back-app</artifactId>
	<version>6.0.0-SNAPSHOT</version>

	<name>back-app</name>
	<description>BackEnd app para CXN naron</description>
	<url>https:xadreznaron.es</url>
	<inceptionYear>2022</inceptionYear>
	<!-- ********************************************** -->
	<!-- *********** ORGANIZATION AND MEMBERS ********* -->
	<!-- ********************************************** -->
	<organization>
		<name>Circulo Xadrez Naron</name>
		<url>https://xadreznaron.es</url>
	</organization>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>manual</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>spp</id>
			<name>Santiago Paz Perez</name>
			<email>santi93.09@gmail.com</email>
			<url>https://santipaz.es</url>
			<organization>Circulo Xadrez Naron</organization>
			<organizationUrl>https://xadreznaron.es</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
			<properties />
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/kunder93/cxn_back.git</connection>
		<developerConnection>scm:git:https://github.com/kunder93/cxn_back.git</developerConnection>
		<url>https://github.com/kunder93/cxn_back</url>
		<tag>back-app-3.0.1</tag>
	</scm>
	<distributionManagement>
		<repository>
			<id>local-repo</id>
			<url>file://${project.basedir}/target/repo</url>
		</repository>

	</distributionManagement>

	<properties>
		<java.version>21</java.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<!-- Spring Versions -->
		<springdoc.openapi.starter.version>2.6.0</springdoc.openapi.starter.version>
		<therapi.runtime.version>0.15.0</therapi.runtime.version>
		<jjwt.version>0.12.6</jjwt.version>
		<junit.jupiter.version>5.11.4</junit.jupiter.version>
		<lombok.version>1.18.36</lombok.version>
		<pmd.plugin.version>3.26.0</pmd.plugin.version>
		<maven.dependency.plugin.version>3.8.1</maven.dependency.plugin.version>
		<maven.jacoco.plugin.version>0.8.12</maven.jacoco.plugin.version>
		<maven.javadoc.plugin.version>3.11.2</maven.javadoc.plugin.version>
		<maven.site.plugin.version>3.21.0</maven.site.plugin.version>
		<maven.surefire.plugin.version>3.5.2</maven.surefire.plugin.version>
		<maven.jxr.plugin.version>3.6.0</maven.jxr.plugin.version>
		<maven.checkstyle.plugin.version>3.6.0</maven.checkstyle.plugin.version>
		<maven.info.reports.plugin.version>3.8.0</maven.info.reports.plugin.version>
		<maven.plugin.report.version>3.15.1</maven.plugin.report.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
		<dependency>
			<groupId>com.github.therapi</groupId>
			<artifactId>therapi-runtime-javadoc</artifactId>
			<version>${therapi.runtime.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency><!-- Spring boot devtools -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-models-jakarta</artifactId>
			<version>2.2.25</version>
		</dependency>
		<!-- Spring Boot Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-test-autoconfigure</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-crypto</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<!-- Apache tika detect image type. -->
		<dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>2.9.1</version>
        </dependency>
		
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<!-- or jjwt-gson if Gson is preferred -->
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency><!-- Hikari CP -->
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc.openapi.starter.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.activation</groupId>
			<artifactId>jakarta.activation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.angus</groupId>
			<artifactId>angus-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>jakarta.mail</groupId>
			<artifactId>jakarta.mail-api</artifactId>
		</dependency>
		<!-- ============================================== -->
		<!-- ================= ASPECTJ ==================== -->
		<!-- ============================================== -->

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<!-- You can use the latest stable version -->
		</dependency>

		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<!-- Java JWT -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
		</dependency>

		<!-- ============================================== -->
		<!-- ================ LIQUIBASE =================== -->
		<!-- ============================================== -->
		<dependency><!-- Liquibase -->
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
		<repository>
			<id>repository.spring.release</id>
			<name>Spring GA Repository</name>
			<url>http://repo.spring.io/release</url>
		</repository>
		<repository>
			<id>apache-releases</id>
			<url>https://repository.apache.org/content/repositories/releases/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty.ee10</groupId>
				<artifactId>jetty-ee10-maven-plugin</artifactId>
				<version>12.0.16</version>
				<configuration>
					<stopPort>8005</stopPort>
					<stopKey>STOP</stopKey>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.openrewrite.maven</groupId>
				<artifactId>rewrite-maven-plugin</artifactId>
				<version>6.0.0</version>
				<configuration>
					<exportDatatables>true</exportDatatables>
					<activeRecipes>
						<recipe>org.openrewrite.java.boot3.ReplaceMockBeanAndSpyBean</recipe>
						<recipe>org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_3</recipe>
						<recipe>org.openrewrite.java.spring.boot3.SpringBootProperties_3_3</recipe>
						<recipe>org.openrewrite.java.spring.boot3.SpringBoot3BestPractices</recipe>
						<recipe>org.openrewrite.java.spring.NoRepoAnnotationOnRepoInterface</recipe>
						<recipe>org.openrewrite.java.spring.framework.UpgradeSpringFramework_6_1</recipe>
						<recipe>org.openrewrite.java.logging.PrintStackTraceToLogError</recipe>
						<recipe>com.cxn.UseMavenCompilerPluginReleaseConfigurationExample</recipe>
						<recipe>com.cxn.UpdateMavenProjectPropertyJavaVersionExample</recipe>
						<recipe>org.openrewrite.java.migrate.UpgradePluginsForJava21</recipe>
						<recipe>org.openrewrite.java.migrate.UpgradeBuildToJava21</recipe>
					</activeRecipes>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.openrewrite.recipe</groupId>
						<artifactId>rewrite-spring</artifactId>
						<version>6.0.0</version>
					</dependency>
					<dependency>
						<groupId>org.openrewrite.recipe</groupId>
						<artifactId>rewrite-logging-frameworks</artifactId>
						<version>3.0.0</version>
					</dependency>
					<dependency>
						<groupId>org.openrewrite.recipe</groupId>
						<artifactId>rewrite-migrate-java</artifactId>
						<version>3.0.0</version>
					</dependency>
				</dependencies>
			</plugin>



			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<!-- ============================================== <execution> <id>enforce</id> 
						<goals> <goal>enforce</goal> </goals> <configuration> <rules> <dependencyConvergence 
						/> </rules> </configuration> </execution> -->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tidy-maven-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.5.0</version>
				<configuration>

					<excludedArtifacts>swagger-ui</excludedArtifacts>
					<!-- For avoid warnings <errorRemedy>ignore</errorRemedy> -->
					<licenseName>mit</licenseName>
					<licenseFile>${basedir}/LICENSE</licenseFile>
					<!-- Specify the output directory for the generated license files -->
					<outputDirectory>${project.build.directory}/generated-sources/licenses</outputDirectory>
					<organizationName>Círculo Xadrez Narón</organizationName>
					<projectName>CXN-back-app</projectName>
					<includes>
						<include>**/*.java</include>
						<include>**/*.xml</include>
						<include>**/*.sql</include>
						<include>**/*.html</include>
						<include>src/**/*.properties</include>
						<include>${basedir}/pom.xml</include>
					</includes>
					<roots>
						<root1>${project.basedir}</root1>
					</roots>
				</configuration>
				<executions>
					<execution>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
					</execution>
					<execution>
						<id>update-headers</id>
						<phase>process-resources</phase>
						<goals>
							<goal>update-file-header</goal>
						</goals>
					</execution>
					<execution>
						<goals>
							<goal>update-project-license</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>es.org.cxn.backapp.BackAppApplication</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${junit.jupiter.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/java/dependency</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>copy-test-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/test/dependency</outputDirectory>
							<includeScope>test</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>com.github.therapi</groupId>
							<artifactId>therapi-runtime-javadoc-scribe</artifactId>
							<version>${therapi.runtime.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-parameters</arg>
						<arg>-encoding</arg>
						<arg>UTF-8</arg>
						<arg>-Xlint:unchecked</arg>
					</compilerArgs>
					<release>${java.version}</release>
				</configuration>
			</plugin>
			<plugin><!-- JaCoCo -->
				<!-- Generates coverage data from Surefire. -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven.jacoco.plugin.version}</version>
				<executions>
					<!-- Jacoco is bound to the initialize and verify phases -->
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-test-report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<show>private</show>
					<nohelp>true</nohelp>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<!-- ********************************************** -->
	<!-- ****************** REPORTS ******************* -->
	<!-- ********************************************** -->
	<reporting>
		<plugins>
			<plugin><!-- Project Info -->
				<!-- Generates general information reports. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.info.reports.plugin.version}</version>
				<configuration>
					<executions>
						<execution>
							<goals>
								<goal>

								</goal>
							</goals>
						</execution>
					</executions>

				</configuration>

				<reportSets>
					<reportSet>
						<reports>

							<report>summary</report>
							<report>licenses</report>
							<report>modules</report>
							<report>team</report>
							<report>dependencies</report>
							<report>dependency-info</report>
							<report>dependency-management</report>
							<report>distribution-management</report>
							<report>plugin-management</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin><!-- Dependency -->
				<!-- Generates the dependencies analysis report. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
			</plugin>
			<plugin><!-- Surefire report -->
				<!-- Generates the unit tests report. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>
			<plugin><!-- JaCoCo -->
				<!-- Generates coverage reports from Surefire. -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin><!-- PMD -->
				<!-- Checks that the code complies with a series of code quality rules. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.plugin.version}</version>
				<configuration>
					<rulesets>
						<ruleset>src/main/resources/pmdRuleset.xml</ruleset>
					</rulesets>
					<skipEmptyReport>false</skipEmptyReport>
					<linkXref>true</linkXref>
					<inputEncoding>utf-8</inputEncoding>
					<targetJdk>${java.version}</targetJdk>
					<excludes>
						<exclude>**/*Bean.java</exclude>
						<exclude>**/generated/*.java</exclude>
					</excludes>
					<excludeRoots>
						<excludeRoot>target/generated-sources/stubs</excludeRoot>
					</excludeRoots>
					<failOnError>true</failOnError>
				</configuration>
			</plugin>
			<plugin><!-- JXR -->
				<!-- Generates references to the source files, used by other reports. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<doctitle>My API for ${project.name} ${project.version}</doctitle>
					<windowtitle> API for ${project.name} ${project.version}</windowtitle>
					<testDoctitle>My Test API for ${project.name}
						${project.version}</testDoctitle>
					<testWindowtitle>My Test API for ${project.name}
						${project.version}</testWindowtitle>
					<show>public</show>
					<additionalOptions>-package</additionalOptions>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<configuration>
					<configLocation>src/main/resources/checkstyle-config.xml</configLocation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-report-plugin</artifactId>
				<version>${maven.plugin.report.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.8.6.6</version>
				<configuration>
					<xmlOutput>true</xmlOutput>
					<!-- Optional directory to put spotbugs xdoc xml report -->
					<xmlOutputDirectory>target/site</xmlOutputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.rat</groupId>
				<artifactId>apache-rat-plugin</artifactId>
				<version>0.16.1</version>
				<configuration>
					<excludes>
						<exclude>doc/**</exclude>
						<exclude>.dockerignore</exclude>
						<exclude>.github/**</exclude>
						<exclude>.pmd</exclude>
						<exclude>*.log</exclude>
						<exclude>Dockerfile</exclude>
						<exclude>lombok.config</exclude>
						<exclude>**/mailcap</exclude>
						<exclude>src/main/resources/cache/ehcache.xsd</exclude>
						<exclude>**/*.yaml</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<reportSets>
					<reportSet>
						<id>integration-tests</id>
						<reports>
							<report>failsafe-report-only</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<skipSurefireReport>true</skipSurefireReport>
					<reportsDirectories>
						<reportsDirectory>${basedir}/target/failsafe-reports</reportsDirectory>
					</reportsDirectories>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
</project>
